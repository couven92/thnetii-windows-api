namespace THNETII.WinApi.Native.WinNT
{
    public enum PROCESSOR_ARCHITECTURE : short
    {
        /// <summary>x86</summary>
        PROCESSOR_ARCHITECTURE_INTEL = WinNTConstants.PROCESSOR_ARCHITECTURE_INTEL,
        PROCESSOR_ARCHITECTURE_MIPS = WinNTConstants.PROCESSOR_ARCHITECTURE_MIPS,
        PROCESSOR_ARCHITECTURE_ALPHA = WinNTConstants.PROCESSOR_ARCHITECTURE_ALPHA,
        PROCESSOR_ARCHITECTURE_PPC = WinNTConstants.PROCESSOR_ARCHITECTURE_PPC,
        PROCESSOR_ARCHITECTURE_SHX = WinNTConstants.PROCESSOR_ARCHITECTURE_SHX,
        /// <summary>ARM</summary>
        PROCESSOR_ARCHITECTURE_ARM = WinNTConstants.PROCESSOR_ARCHITECTURE_ARM,
        /// <summary>Intel Itanium-based</summary>
        PROCESSOR_ARCHITECTURE_IA64 = WinNTConstants.PROCESSOR_ARCHITECTURE_IA64,
        PROCESSOR_ARCHITECTURE_ALPHA64 = WinNTConstants.PROCESSOR_ARCHITECTURE_ALPHA64,
        PROCESSOR_ARCHITECTURE_MSIL = WinNTConstants.PROCESSOR_ARCHITECTURE_MSIL,
        /// <summary>x64 (AMD or Intel)</summary>
        PROCESSOR_ARCHITECTURE_AMD64 = WinNTConstants.PROCESSOR_ARCHITECTURE_AMD64,
        PROCESSOR_ARCHITECTURE_IA32_ON_WIN64 = WinNTConstants.PROCESSOR_ARCHITECTURE_IA32_ON_WIN64,
        PROCESSOR_ARCHITECTURE_NEUTRAL = WinNTConstants.PROCESSOR_ARCHITECTURE_NEUTRAL,
        /// <summary>ARM64</summary>
        PROCESSOR_ARCHITECTURE_ARM64 = WinNTConstants.PROCESSOR_ARCHITECTURE_ARM64,
        PROCESSOR_ARCHITECTURE_ARM32_ON_WIN64 = WinNTConstants.PROCESSOR_ARCHITECTURE_ARM32_ON_WIN64,
        PROCESSOR_ARCHITECTURE_IA32_ON_ARM64 = WinNTConstants.PROCESSOR_ARCHITECTURE_IA32_ON_ARM64,

        /// <summary>Unknown architecture</summary>
        PROCESSOR_ARCHITECTURE_UNKNOWN = WinNTConstants.PROCESSOR_ARCHITECTURE_UNKNOWN,
    }
}
